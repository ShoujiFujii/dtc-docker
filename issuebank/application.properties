# モジュールサーバの接続先(発行機関)
connection.address.http=http://issuebank:8080
#connection.address.http=http://13.230.22.237/issuebank

# 本人確認用証明書セット
certificates.identity[0].name=default
certificates.identity[0].paths=./issbank23q3_crt.pem,./InterCA_crt.pem
certificates.identity[0].tokenTypes=CBDC,COUPON,SAMPLE_TICKET,BENEFIT_1,BENEFIT_2,BENEFIT_3,BENEFIT_4,BENEFIT_5

# 本人確認用ルート証明書
certificates.root[0].name=default
certificates.root[0].path=./RootCA_crt.pem
certificates.root[0].tokenTypes=CBDC,COUPON,SAMPLE_TICKET,BENEFIT_1,BENEFIT_2,BENEFIT_3,BENEFIT_4,BENEFIT_5

# トークンルート証明書
certificates.token[0].name=default
certificates.token[0].path=./issbank23q3_crt.pem
certificates.token[0].tokenTypes=CBDC,COUPON,SAMPLE_TICKET,BENEFIT_1,BENEFIT_2,BENEFIT_3,BENEFIT_4,BENEFIT_5

# 検証有効/無効フラグ（デバッグ用）
validationEnabled.certs=true
validationEnabled.message=true
validationEnabled.t0=true
validationEnabled.tn=true

# トークン発行要件
token.requirements[0].tokenType=CBDC
token.requirements[0].tokenVersion=2
token.requirements[0].subject=BOJ
token.requirements[0].tokenMethod=23
token.requirements[0].validDays=3650
token.requirements[0].maxHop=1000

token.requirements[1].tokenType=COUPON
token.requirements[1].tokenVersion=2
token.requirements[1].subject=SAMPLE_CORP
token.requirements[1].tokenMethod=20
token.requirements[1].validDays=3650
token.requirements[1].maxHop=1000

token.requirements[2].tokenType=SAMPLE_TICKET
token.requirements[2].tokenVersion=2
token.requirements[2].subject=SAMPLE_CORP
token.requirements[2].tokenMethod=10
token.requirements[2].validDays=3650
token.requirements[2].maxHop=1000

token.requirements[3].tokenType=BENEFIT_1
token.requirements[3].tokenVersion=2
token.requirements[3].subject=BENEFIT_1
token.requirements[3].tokenMethod=20
token.requirements[3].validDays=3650
token.requirements[3].maxHop=1000

token.requirements[4].tokenType=BENEFIT_2
token.requirements[4].tokenVersion=2
token.requirements[4].subject=BENEFIT_2
token.requirements[4].tokenMethod=20
token.requirements[4].validDays=3650
token.requirements[4].maxHop=1000

token.requirements[5].tokenType=BENEFIT_3
token.requirements[5].tokenVersion=2
token.requirements[5].subject=BENEFIT_3
token.requirements[5].tokenMethod=20
token.requirements[5].validDays=3650
token.requirements[5].maxHop=1000

token.requirements[6].tokenType=BENEFIT_4
token.requirements[6].tokenVersion=2
token.requirements[6].subject=BENEFIT_4
token.requirements[6].tokenMethod=20
token.requirements[6].validDays=3650
token.requirements[6].maxHop=1000

token.requirements[7].tokenType=BENEFIT_5
token.requirements[7].tokenVersion=2
token.requirements[7].subject=BENEFIT_5
token.requirements[7].tokenMethod=20
token.requirements[7].validDays=3650
token.requirements[7].maxHop=1000

# DB接続情報
spring.jpa.database=POSTGRESQL
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/issuedb
spring.datasource.username=postgres
spring.datasource.password=postgres

# HikariCP settings
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=600000

### 以下DBを毎回初期化するため、実環境では変更すること
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:schema.sql
spring.sql.init.encoding=UTF-8
spring.jpa.show-sql=false

# ログ設定ファイル
logging.config=./logconfig.xml
spring.profiles.active=production

## Enclave Client用
enclave.port=5000
enclave.cid=20
enclave.network-mode=vsock

## HSM Client用
#hsm.mode=cloudhsm
#hsm.user=cij
#hsm.password=cijcij123
#hsm.partition: hsm-l3esxwpz4x3
#hsm.handle: 1572887

## CloudHSM の代わりに JKS を使用する場合
hsm.mode=jks
hsm.password=password
hsm.privkeylabel=issuebank
hsm.jks=./issuebank.jks
